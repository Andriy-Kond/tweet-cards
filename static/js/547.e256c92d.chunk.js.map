{"version":3,"file":"static/js/547.e256c92d.chunk.js","mappings":"0KACA,EAAuB,2BAAvB,EAA0D,4B,0DCM7CA,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MAEjBC,GAAgCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAArCI,EAAQF,EAAA,GAAEG,EAAWH,EAAA,GAC5BI,GAAkCL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAvCE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,GAAwCT,EAAAA,EAAAA,UAAS,IAAGU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAA7CE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAG9BG,EAAW,SAAHC,GAAqC,IAADC,EAAAD,EAA9BE,OAAUC,EAAIF,EAAJE,KAAMC,EAAKH,EAALG,MACrB,SAATD,EACFb,EAAYc,GACM,UAATD,EACTT,EAAaU,GAEbN,EAAgBM,EAEpB,EA8CA,OACEC,EAAAA,EAAAA,MAAA,QAAMC,UAAWC,EAAUC,SA7CR,SAAAC,GACnBA,EAAEC,iBAGGrB,GAAaI,GAAcI,EAOhCd,GACE4B,EAAAA,EAAAA,IAAc,CACZR,KAAMd,EACNuB,MAAOnB,EACPoB,SAAUhB,KAGXiB,SACAC,MAAK,SAAAC,GAOJC,IAAAA,OAAAA,QAAwB,gEAADC,OACPF,EAAQG,KAAKhB,KAAI,oIAEnC,IACCiB,OAAM,SAAAC,GACLJ,IAAAA,OAAAA,QAAwB,+CAADC,OACTG,EAAK,+LAErB,IA5BAJ,IAAAA,OAAAA,QAAwB,6JAoC5B,EAGqDK,aAAa,MAAKC,SAAA,EACnElB,EAAAA,EAAAA,MAAA,SAAOC,UAAWC,EAAUgB,SAAA,CAAC,YAE3BC,EAAAA,EAAAA,KAAA,SACElB,UAAU,oBAEVmB,YAAY,uBACZ,aAAW,OACXC,KAAK,OACLvB,KAAK,OACLwB,SAAU5B,EACVK,MAAOf,QAGXgB,EAAAA,EAAAA,MAAA,SAAOC,UAAWC,EAAUgB,SAAA,CAAC,SAE3BC,EAAAA,EAAAA,KAAA,SACElB,UAAU,oBAEVmB,YAAY,wBACZ,aAAW,QACXC,KAAK,QACLvB,KAAK,QACLwB,SAAU5B,EACVK,MAAOX,QAGXY,EAAAA,EAAAA,MAAA,SAAOC,UAAWC,EAAUgB,SAAA,CAAC,YAE3BC,EAAAA,EAAAA,KAAA,SACElB,UAAU,oBAEVmB,YAAY,2BACZ,aAAW,WACXC,KAAK,WACLvB,KAAK,WACLwB,SAAU5B,EACVK,MAAOP,QAGX2B,EAAAA,EAAAA,KAAA,UAAQE,KAAK,SAASpB,UAAU,0BAAyBiB,SAAC,eAKhE,ECjHe,SAASK,IACtB,OACEJ,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAAC1C,EAAY,KAGnB,C","sources":["webpack://tweet-cards/./src/components/RegisterForm/RegisterForm.module.css?a5d4","components/RegisterForm/RegisterForm.jsx","pages/Register/RegisterPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"RegisterForm_form__3iUb8\",\"label\":\"RegisterForm_label__jbA3-\"};","import css from './RegisterForm.module.css';\nimport Notiflix from 'notiflix';\n\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fetchRegister } from 'redux/auth/fetchAuth';\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const [userName, setUserName] = useState('');\n  const [userEmail, setUserEmail] = useState('');\n  const [userPassword, setUserPassword] = useState('');\n\n  // Записую дані полів інпут у відповідні стейти\n  const getInput = ({ target: { name, value } }) => {\n    if (name === 'name') {\n      setUserName(value);\n    } else if (name === 'email') {\n      setUserEmail(value);\n    } else {\n      setUserPassword(value);\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    // const form = e.currentTarget;\n\n    if (!userName || !userEmail || !userPassword) {\n      // alert(`Всі поля мають бути заповнені`);\n      Notiflix.Notify.failure(`Всі поля мають бути заповнені`);\n      return;\n    }\n\n    // const isLogged =\n    dispatch(\n      fetchRegister({\n        name: userName,\n        email: userEmail,\n        password: userPassword,\n      })\n    )\n      .unwrap()\n      .then(promise => {\n        // Можна і не чистити поля, бо все одно переходимо на іншу сторінку:\n        //   setUserName('');\n        //   setUserEmail('');\n        //   setUserPassword('');\n\n        // console.log('handleSubmit >> promise:', promise);\n        Notiflix.Notify.success(\n          `Користувач ${promise.user.name} успішно зареєстрований`\n        );\n      })\n      .catch(error => {\n        Notiflix.Notify.failure(\n          `Помилка: ${error}. Можливо такий користувач вже існує.`\n        );\n      });\n\n    // Якщо помилки не було, то значить новий користувач створений і можна очистити поля\n    // if (!isLogged.error) {\n    //   setUserName('');\n    //   setUserEmail('');\n    //   setUserPassword('');\n    // }\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit} autoComplete=\"off\">\n      <label className={css.label}>\n        Username\n        <input\n          className=\"form-control me-2\"\n          // type=\"search\"\n          placeholder=\"Enter your name here\"\n          aria-label=\"Name\"\n          type=\"text\"\n          name=\"name\"\n          onChange={getInput}\n          value={userName}\n        />\n      </label>\n      <label className={css.label}>\n        Email\n        <input\n          className=\"form-control me-2\"\n          // type=\"search\"\n          placeholder=\"Enter your email here\"\n          aria-label=\"email\"\n          type=\"email\"\n          name=\"email\"\n          onChange={getInput}\n          value={userEmail}\n        />\n      </label>\n      <label className={css.label}>\n        Password\n        <input\n          className=\"form-control me-2\"\n          // type=\"search\"\n          placeholder=\"Enter your password here\"\n          aria-label=\"password\"\n          type=\"password\"\n          name=\"password\"\n          onChange={getInput}\n          value={userPassword}\n        />\n      </label>\n      <button type=\"submit\" className=\"btn btn-outline-primary\">\n        Register\n      </button>\n    </form>\n  );\n};\n","import { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nexport default function Register() {\n  return (\n    <div>\n      <RegisterForm />\n    </div>\n  );\n}\n"],"names":["RegisterForm","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","userName","setUserName","_useState3","_useState4","userEmail","setUserEmail","_useState5","_useState6","userPassword","setUserPassword","getInput","_ref","_ref$target","target","name","value","_jsxs","className","css","onSubmit","e","preventDefault","fetchRegister","email","password","unwrap","then","promise","Notiflix","concat","user","catch","error","autoComplete","children","_jsx","placeholder","type","onChange","Register"],"sourceRoot":""}