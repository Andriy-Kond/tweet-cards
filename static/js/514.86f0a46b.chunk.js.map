{"version":3,"file":"static/js/514.86f0a46b.chunk.js","mappings":"8LACA,EAAuB,wBAAvB,EAAuD,yB,0DCO1CA,EAAY,WAGvB,IAAMC,GAAWC,EAAAA,EAAAA,MAEjBC,GAAkCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAvCI,EAASF,EAAA,GAAEG,EAAYH,EAAA,GAC9BI,GAAwCL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA7CE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAG9BG,EAAW,SAAHC,GAAqC,IAADC,EAAAD,EAA9BE,OAAUC,EAAIF,EAAJE,KAAMC,EAAKH,EAALG,MACrB,UAATD,EACFT,EAAaU,GAEbN,EAAgBM,EAEpB,EAEMC,EAAY,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAMC,GAAC,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACP,GAAnBJ,EAAEK,iBACGvB,GAAcI,EAAY,CAAAgB,EAAAE,KAAA,QAE4B,OAAzDE,IAAAA,OAAAA,QAAwB,8JAAiCJ,EAAAK,OAAA,iBAI3D/B,GACEgC,EAAAA,EAAAA,IAAW,CACTC,MAAO3B,EACP4B,SAAUxB,KAGXyB,SACAC,MAAK,SAAAC,GACJP,IAAAA,OAAAA,QAAwB,0FAADQ,OAAqBD,EAAQE,KAAKvB,KAAI,KAK/D,IACCwB,OAAM,SAAAC,GACLX,IAAAA,OAAAA,QAAwB,+CAADQ,OACTG,EAAK,4MAErB,IAAG,wBAAAf,EAAAgB,OAAA,GAAAnB,EAAA,KACN,gBA3BiBoB,GAAA,OAAAxB,EAAAyB,MAAA,KAAAC,UAAA,KA6BlB,OACEC,EAAAA,EAAAA,MAAA,QAAMC,UAAWC,EAAUC,SAAU/B,EAAcgC,aAAa,MAAKC,SAAA,EACnEL,EAAAA,EAAAA,MAAA,SAAOC,UAAWC,EAAUG,SAAA,CAAC,SAE3BC,EAAAA,EAAAA,KAAA,SACEL,UAAU,oBACVM,YAAY,wBACZ,aAAW,QACXC,KAAK,QACLtC,KAAK,QACLuC,SAAU3C,EACVK,MAAOX,QAGXwC,EAAAA,EAAAA,MAAA,SAAOC,UAAWC,EAAUG,SAAA,CAAC,YAE3BC,EAAAA,EAAAA,KAAA,SACEL,UAAU,oBACVM,YAAY,2BACZ,aAAW,WACXC,KAAK,WACLtC,KAAK,WACLuC,SAAU3C,EACVK,MAAOP,QAGX0C,EAAAA,EAAAA,KAAA,UAAQE,KAAK,SAASP,UAAU,0BAAyBI,SAAC,aAKhE,EC5EA,EARc,WACZ,OACEC,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAACrD,EAAS,KAGhB,C","sources":["webpack://tweet-cards/./src/components/LoginForm/LoginForm.module.css?4ac5","components/LoginForm/LoginForm.jsx","pages/Login/LoginPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"LoginForm_form__w2amm\",\"label\":\"LoginForm_label__Zf4+q\"};","import css from './LoginForm.module.css';\nimport Notiflix from 'notiflix';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fetchLogIn } from 'redux/auth/fetchAuth';\n// import { useNavigate } from 'react-router-dom';\n// import { selectIsLoggedIn } from 'redux/auth/selectors';\n\nexport const LoginForm = () => {\n  // const navigate = useNavigate();\n  // const isLogged = useSelector(selectIsLoggedIn);\n  const dispatch = useDispatch();\n\n  const [userEmail, setUserEmail] = useState('');\n  const [userPassword, setUserPassword] = useState('');\n\n  // Записую дані полів інпут у відповідні стейти\n  const getInput = ({ target: { name, value } }) => {\n    if (name === 'email') {\n      setUserEmail(value);\n    } else {\n      setUserPassword(value);\n    }\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!userEmail || !userPassword) {\n      // alert(`Всі поля мають бути заповнені`);\n      Notiflix.Notify.failure(`Всі поля мають бути заповнені`);\n      return;\n    }\n\n    dispatch(\n      fetchLogIn({\n        email: userEmail,\n        password: userPassword,\n      })\n    )\n      .unwrap()\n      .then(promise => {\n        Notiflix.Notify.success(`Ласкаво просимо, ${promise.user.name}.`);\n        // Можна і не чистити поля, бо все одно переходимо на іншу сторінку:\n        // setUserEmail('');\n        // setUserPassword('');\n        //   // navigate('/profile', { replace: true });\n      })\n      .catch(error => {\n        Notiflix.Notify.failure(\n          `Помилка: ${error}. Можливо не правильний логін чи пароль.`\n        );\n      });\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit} autoComplete=\"off\">\n      <label className={css.label}>\n        Email\n        <input\n          className=\"form-control me-2\"\n          placeholder=\"Enter your email here\"\n          aria-label=\"email\"\n          type=\"email\"\n          name=\"email\"\n          onChange={getInput}\n          value={userEmail}\n        />\n      </label>\n      <label className={css.label}>\n        Password\n        <input\n          className=\"form-control me-2\"\n          placeholder=\"Enter your password here\"\n          aria-label=\"password\"\n          type=\"password\"\n          name=\"password\"\n          onChange={getInput}\n          value={userPassword}\n        />\n      </label>\n      <button type=\"submit\" className=\"btn btn-outline-primary\">\n        Log In\n      </button>\n    </form>\n  );\n};\n","import { LoginForm } from 'components/LoginForm/LoginForm';\nconst Login = () => {\n  return (\n    <div>\n      <LoginForm />\n    </div>\n  );\n};\n\nexport default Login;\n"],"names":["LoginForm","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","userEmail","setUserEmail","_useState3","_useState4","userPassword","setUserPassword","getInput","_ref","_ref$target","target","name","value","handleSubmit","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","wrap","_context","prev","next","preventDefault","Notiflix","abrupt","fetchLogIn","email","password","unwrap","then","promise","concat","user","catch","error","stop","_x","apply","arguments","_jsxs","className","css","onSubmit","autoComplete","children","_jsx","placeholder","type","onChange"],"sourceRoot":""}